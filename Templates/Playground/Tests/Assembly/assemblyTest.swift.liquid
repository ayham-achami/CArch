//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright © {{ year }} {{ developer.company }}. All rights reserved.
//

import XCTest
@testable import Playground

final class {{ module_info.name }}ModuleAssemblyTests: XCTestCase {

    // Проверить, что модуль собирается
    func testAssemblyModule() {
        // Given
        let assembly = {{ module_info.name }}Module.Builder().build()
        let viewController = assembly.view as? {{ module_info.name }}ViewController

        // Then
        XCTAssertNotNil(viewController, "{{ module_info.name }}ViewController is nil")
        XCTAssertNotNil(viewController?.router, "{{ module_info.name }}Router is nil")
        
        XCTAssertNotNil(viewController?.provider, "{{ module_info.name }}Provider is nil")
        
        guard let provider = (viewController?.provider as? {{ module_info.name }}Provider) else {
            XCTFail("Provider is not an {{ module_info.name }}Provider")
            return
        }
        let presenter = Mirror(reflecting: provider)
            .children
            .first(where: { $0.label == "presenter" })?.value as? {{ module_info.name }}Presenter
        XCTAssertNotNil(presenter, "presenter in {{ module_info.name }}Provider is nil")
        
        if let presenter = presenter {
            let view = Mirror(reflecting: presenter)
                .children
                .first(where: { $0.label == "view" })?.value as? {{ module_info.name }}RenderingLogic
            XCTAssertNotNil(view, "view in {{ module_info.name }}Presenter is nil")
        }
    }
}
